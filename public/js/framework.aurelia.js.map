{"version":3,"sources":["nodelibs-process@0.1.2.js","index.js","process@0.11.2.js","browser.js","aurelia-loader-default@1.0.0-beta.1.1.2.js","aurelia-loader-default.js"],"names":[],"mappingsfile":"framework.aurelia.js","sourcesContent":["module.exports = require(\"github:jspm/nodelibs-process@0.1.2/index\");","module.exports = System._nodeRequire ? process : require('process');","module.exports = require(\"npm:process@0.11.2/browser\");","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","define([\"npm:aurelia-loader-default@1.0.0-beta.1.1.2/aurelia-loader-default\"], function(main) {\n  return main;\n});","/* */ \ndefine(['exports', 'aurelia-loader', 'aurelia-pal', 'aurelia-metadata'], function (exports, _aureliaLoader, _aureliaPal, _aureliaMetadata) {\n  'use strict';\n\n  exports.__esModule = true;\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n  var TextTemplateLoader = (function () {\n    function TextTemplateLoader() {\n      _classCallCheck(this, TextTemplateLoader);\n    }\n\n    TextTemplateLoader.prototype.loadTemplate = function loadTemplate(loader, entry) {\n      return loader.loadText(entry.address).then(function (text) {\n        entry.template = _aureliaPal.DOM.createTemplateFromMarkup(text);\n      });\n    };\n\n    return TextTemplateLoader;\n  })();\n\n  exports.TextTemplateLoader = TextTemplateLoader;\n\n  function ensureOriginOnExports(executed, name) {\n    var target = executed;\n    var key = undefined;\n    var exportedValue = undefined;\n\n    if (target.__useDefault) {\n      target = target['default'];\n    }\n\n    _aureliaMetadata.Origin.set(target, new _aureliaMetadata.Origin(name, 'default'));\n\n    for (key in target) {\n      exportedValue = target[key];\n\n      if (typeof exportedValue === 'function') {\n        _aureliaMetadata.Origin.set(exportedValue, new _aureliaMetadata.Origin(name, key));\n      }\n    }\n\n    return executed;\n  }\n\n  var DefaultLoader = (function (_Loader) {\n    _inherits(DefaultLoader, _Loader);\n\n    function DefaultLoader() {\n      _classCallCheck(this, DefaultLoader);\n\n      _Loader.call(this);\n\n      this.textPluginName = 'text';\n      this.moduleRegistry = {};\n      this.useTemplateLoader(new TextTemplateLoader());\n\n      var that = this;\n\n      this.addPlugin('template-registry-entry', {\n        'fetch': function fetch(address) {\n          var entry = that.getOrCreateTemplateRegistryEntry(address);\n          return entry.templateIsLoaded ? entry : that.templateLoader.loadTemplate(that, entry).then(function (x) {\n            return entry;\n          });\n        }\n      });\n    }\n\n    DefaultLoader.prototype.useTemplateLoader = function useTemplateLoader(templateLoader) {\n      this.templateLoader = templateLoader;\n    };\n\n    DefaultLoader.prototype.loadAllModules = function loadAllModules(ids) {\n      var loads = [];\n\n      for (var i = 0, ii = ids.length; i < ii; ++i) {\n        loads.push(this.loadModule(ids[i]));\n      }\n\n      return Promise.all(loads);\n    };\n\n    DefaultLoader.prototype.loadTemplate = function loadTemplate(url) {\n      return this._import(this.applyPluginToUrl(url, 'template-registry-entry'));\n    };\n\n    DefaultLoader.prototype.loadText = function loadText(url) {\n      return this._import(this.applyPluginToUrl(url, this.textPluginName));\n    };\n\n    return DefaultLoader;\n  })(_aureliaLoader.Loader);\n\n  exports.DefaultLoader = DefaultLoader;\n\n  _aureliaPal.PLATFORM.Loader = DefaultLoader;\n\n  if (!_aureliaPal.PLATFORM.global.System || !_aureliaPal.PLATFORM.global.System['import']) {\n    if (_aureliaPal.PLATFORM.global.requirejs && requirejs.s && requirejs.s.contexts && requirejs.s.contexts._ && requirejs.s.contexts._.defined) {\n      _aureliaPal.PLATFORM.eachModule = function (callback) {\n        var defined = requirejs.s.contexts._.defined;\n        for (var key in defined) {\n          try {\n            if (callback(key, defined[key])) return;\n          } catch (e) {}\n        }\n      };\n    } else {\n      _aureliaPal.PLATFORM.eachModule = function (callback) {};\n    }\n\n    DefaultLoader.prototype._import = function (moduleId) {\n      return new Promise(function (resolve, reject) {\n        require([moduleId], resolve, reject);\n      });\n    };\n\n    DefaultLoader.prototype.loadModule = function (id) {\n      var _this = this;\n\n      var existing = this.moduleRegistry[id];\n      if (existing !== undefined) {\n        return Promise.resolve(existing);\n      }\n\n      return new Promise(function (resolve, reject) {\n        require([id], function (m) {\n          _this.moduleRegistry[id] = m;\n          resolve(ensureOriginOnExports(m, id));\n        }, reject);\n      });\n    };\n\n    DefaultLoader.prototype.map = function (id, source) {};\n\n    DefaultLoader.prototype.normalize = function (moduleId, relativeTo) {\n      return Promise.resolve(moduleId);\n    };\n\n    DefaultLoader.prototype.normalizeSync = function (moduleId, relativeTo) {\n      return moduleId;\n    };\n\n    DefaultLoader.prototype.applyPluginToUrl = function (url, pluginName) {\n      return pluginName + '!' + url;\n    };\n\n    DefaultLoader.prototype.addPlugin = function (pluginName, implementation) {\n      define(pluginName, [], {\n        'load': function load(name, req, onload) {\n          var address = req.toUrl(name);\n          var result = implementation.fetch(address);\n          Promise.resolve(result).then(onload);\n        }\n      });\n    };\n  } else {\n    _aureliaPal.PLATFORM.eachModule = function (callback) {\n      var modules = System._loader.modules;\n\n      for (var key in modules) {\n        try {\n          if (callback(key, modules[key].module)) return;\n        } catch (e) {}\n      }\n    };\n\n    System.set('text', System.newModule({\n      'translate': function translate(load) {\n        return 'module.exports = \"' + load.source.replace(/([\"\\\\])/g, '\\\\$1').replace(/[\\f]/g, '\\\\f').replace(/[\\b]/g, '\\\\b').replace(/[\\n]/g, '\\\\n').replace(/[\\t]/g, '\\\\t').replace(/[\\r]/g, '\\\\r').replace(/[\\u2028]/g, '\\\\u2028').replace(/[\\u2029]/g, '\\\\u2029') + '\";';\n      }\n    }));\n\n    DefaultLoader.prototype._import = function (moduleId) {\n      return System['import'](moduleId);\n    };\n\n    DefaultLoader.prototype.loadModule = function (id) {\n      var _this2 = this;\n\n      return System.normalize(id).then(function (newId) {\n        var existing = _this2.moduleRegistry[newId];\n        if (existing !== undefined) {\n          return Promise.resolve(existing);\n        }\n\n        return System['import'](newId).then(function (m) {\n          _this2.moduleRegistry[newId] = m;\n          return ensureOriginOnExports(m, newId);\n        });\n      });\n    };\n\n    DefaultLoader.prototype.map = function (id, source) {\n      System.map[id] = source;\n    };\n\n    DefaultLoader.prototype.normalizeSync = function (moduleId, relativeTo) {\n      return System.normalizeSync(moduleId, relativeTo);\n    };\n\n    DefaultLoader.prototype.normalize = function (moduleId, relativeTo) {\n      return System.normalize(moduleId, relativeTo);\n    };\n\n    DefaultLoader.prototype.applyPluginToUrl = function (url, pluginName) {\n      return url + '!' + pluginName;\n    };\n\n    DefaultLoader.prototype.addPlugin = function (pluginName, implementation) {\n      System.set(pluginName, System.newModule({\n        'fetch': function fetch(load, _fetch) {\n          var result = implementation.fetch(load.address);\n          return Promise.resolve(result).then(function (x) {\n            load.metadata.result = x;\n            return '';\n          });\n        },\n        'instantiate': function instantiate(load) {\n          return load.metadata.result;\n        }\n      }));\n    };\n  }\n});"],"sourceRoot":"/source/"}